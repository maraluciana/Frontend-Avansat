{"ast":null,"code":"var _jsxFileName = \"D:\\\\laborator3\\\\src\\\\context\\\\index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useMemo, useState } from \"react\";\nimport { ListItemStatus } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateCtx = /*#__PURE__*/createContext({\n  state: [],\n  actions: {\n    addTodo: () => {},\n    editTodo: () => {}\n  }\n});\nconst StateProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState([]);\n  const addTodo = useCallback(text => {\n    setState([...state, {\n      status: ListItemStatus.todo,\n      text\n    }]);\n  }, [state]);\n  const editTodo = useCallback((index, currentStatus) => {\n    let newStatatus = ListItemStatus.todo;\n    if (currentStatus === ListItemStatus.todo) {\n      newStatatus = ListItemStatus.active;\n    }\n    if (currentStatus === ListItemStatus.active) {\n      newStatatus = ListItemStatus.closed;\n    }\n    const newState = [...state];\n    newState[index].status = newStatatus;\n    setState(newState);\n  }, [state]);\n  const ctxValue = useMemo(() => ({\n    state,\n    actions: {\n      addTodo,\n      editTodo\n    }\n  }), [state, addTodo, editTodo]);\n  return /*#__PURE__*/_jsxDEV(StateCtx.Provider, {\n    value: ctxValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n};\n_s(StateProvider, \"y8qngk5mm1nmto+y2QTEO/Mts5E=\");\n_c = StateProvider;\nexport const useTodoData = () => {\n  _s2();\n  const {\n    state\n  } = useContext(StateCtx);\n  return state;\n};\n_s2(useTodoData, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\nexport const useTodoActions = () => {\n  _s3();\n  const {\n    actions\n  } = useContext(StateCtx);\n  return actions;\n};\n_s3(useTodoActions, \"rbCW74QAhay0/idJByjyLHZKzP4=\");\nexport default StateProvider;\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useMemo","useState","ListItemStatus","StateCtx","state","actions","addTodo","editTodo","StateProvider","children","setState","text","status","todo","index","currentStatus","newStatatus","active","closed","newState","ctxValue","useTodoData","useTodoActions"],"sources":["D:/laborator3/src/context/index.tsx"],"sourcesContent":["import React, { createContext, useCallback, useContext, useMemo, useState } from \"react\";\nimport { ListItem, ListItemStatus } from \"../types\";\n\ninterface StateCtxInterface {\n    state: ListItem[];\n    actions: {\n        addTodo: (data: string) => void;\n        editTodo: (index: number, currentStatus: ListItemStatus) => void\n    };\n}\n\nconst StateCtx = createContext<StateCtxInterface>({\n    state: [],\n    actions: {\n        addTodo: () => { },\n        editTodo: () => { }\n    }\n})\n\nconst StateProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const [state, setState] = useState<ListItem[]>([])\n\n    const addTodo = useCallback((text: string) => {\n        setState([\n            ...state,\n            { status: ListItemStatus.todo, text }\n        ])\n    }, [state]);\n\n    const editTodo = useCallback((index: number, currentStatus: ListItemStatus) => {\n        let newStatatus = ListItemStatus.todo;\n        if (currentStatus === ListItemStatus.todo) {\n            newStatatus = ListItemStatus.active\n        }\n        if (currentStatus === ListItemStatus.active) {\n            newStatatus = ListItemStatus.closed\n        }\n        const newState = [...state]\n        newState[index].status = newStatatus\n        setState(newState);\n    }, [state]);\n\n    const ctxValue: StateCtxInterface = useMemo(() => ({\n        state,\n        actions: {\n            addTodo,\n            editTodo\n        }\n    }), [state, addTodo, editTodo])\n\n    return <StateCtx.Provider value={ctxValue}>{children}</StateCtx.Provider>\n}\n\nexport const useTodoData = () => {\n    const { state } = useContext(StateCtx);\n    return state;\n}\n\nexport const useTodoActions = () => {\n    const { actions } = useContext(StateCtx)\n    return actions\n}\n\nexport default StateProvider\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACxF,SAAmBC,cAAc,QAAQ,UAAU;AAAC;AAUpD,MAAMC,QAAQ,gBAAGN,aAAa,CAAoB;EAC9CO,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM,CAAE,CAAC;IAClBC,QAAQ,EAAE,MAAM,CAAE;EACtB;AACJ,CAAC,CAAC;AAEF,MAAMC,aAAsD,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACxE,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGT,QAAQ,CAAa,EAAE,CAAC;EAElD,MAAMK,OAAO,GAAGR,WAAW,CAAEa,IAAY,IAAK;IAC1CD,QAAQ,CAAC,CACL,GAAGN,KAAK,EACR;MAAEQ,MAAM,EAAEV,cAAc,CAACW,IAAI;MAAEF;IAAK,CAAC,CACxC,CAAC;EACN,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMG,QAAQ,GAAGT,WAAW,CAAC,CAACgB,KAAa,EAAEC,aAA6B,KAAK;IAC3E,IAAIC,WAAW,GAAGd,cAAc,CAACW,IAAI;IACrC,IAAIE,aAAa,KAAKb,cAAc,CAACW,IAAI,EAAE;MACvCG,WAAW,GAAGd,cAAc,CAACe,MAAM;IACvC;IACA,IAAIF,aAAa,KAAKb,cAAc,CAACe,MAAM,EAAE;MACzCD,WAAW,GAAGd,cAAc,CAACgB,MAAM;IACvC;IACA,MAAMC,QAAQ,GAAG,CAAC,GAAGf,KAAK,CAAC;IAC3Be,QAAQ,CAACL,KAAK,CAAC,CAACF,MAAM,GAAGI,WAAW;IACpCN,QAAQ,CAACS,QAAQ,CAAC;EACtB,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,MAAMgB,QAA2B,GAAGpB,OAAO,CAAC,OAAO;IAC/CI,KAAK;IACLC,OAAO,EAAE;MACLC,OAAO;MACPC;IACJ;EACJ,CAAC,CAAC,EAAE,CAACH,KAAK,EAAEE,OAAO,EAAEC,QAAQ,CAAC,CAAC;EAE/B,oBAAO,QAAC,QAAQ,CAAC,QAAQ;IAAC,KAAK,EAAEa,QAAS;IAAA,UAAEX;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAqB;AAC7E,CAAC;AAAA,GAhCKD,aAAsD;AAAA,KAAtDA,aAAsD;AAkC5D,OAAO,MAAMa,WAAW,GAAG,MAAM;EAAA;EAC7B,MAAM;IAAEjB;EAAM,CAAC,GAAGL,UAAU,CAACI,QAAQ,CAAC;EACtC,OAAOC,KAAK;AAChB,CAAC;AAAA,IAHYiB,WAAW;AAKxB,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAChC,MAAM;IAAEjB;EAAQ,CAAC,GAAGN,UAAU,CAACI,QAAQ,CAAC;EACxC,OAAOE,OAAO;AAClB,CAAC;AAAA,IAHYiB,cAAc;AAK3B,eAAed,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}